#+TITLE: Holymacs ~ Look 'n feel
#+AUTHOR: MinasMazar
#+EMAIL: minasmazar@gmail.com
#+DATE: <2024-06-20 Thu>
#+PROPERTY: header-args :tangle ~/.emacs.d/modules/look_n_feel.el :mkdirp yes
#+SETUPFILE: ../../templates/_header.org
#+HTML_LINK_UP: ../holymacs.html

* Icons

#+begin_src elisp
  (use-package all-the-icons)
  (use-package all-the-icons-gnus
    :config
    (all-the-icons-gnus-setup))
  (use-package all-the-icons-dired
    :hook
    (dired-mode . all-the-icons-dired-mode))
  (use-package all-the-icons-ibuffer
    :hook
    (ibuffer-mode . all-the-icons-ibuffer-mode))
#+end_src

* Dashboard

#+begin_src elisp
  (use-package dashboard
    :config
    (dashboard-setup-startup-hook)
    :bind
    (:map dashboard-mode-map
  	("n" . #'widget-forward)
  	("p" . #'widget-backward))
    :custom
    (dashboard-week-agenda t)
    (dashboard-icon-type 'all-the-icons)
    (dashboard-set-file-icons t)
    (dashboard-set-heading-icons t)
    (dashboard-navigation-cycle t)
    (dashboard-items '((recents   . 5)
                       (bookmarks . 5)
                       (projects  . 5)
                       (agenda    . 5)
                       (registers . 5)))
    (dashboard-item-shortcuts '((recents   . "r")
                                (bookmarks . "m")
                                (projects  . "p")
                                (agenda    . "a")
                                (registers . "e"))))
#+end_src
* Beautify

#+begin_src elisp :tangle no
  (use-package org-modern
    :config
    (global-org-modern-mode))
#+end_src

* Highlight line

#+begin_src elisp
  (use-package beacon
    :config
    (beacon-mode 1))
#+end_src

* Themes

#+begin_src elisp
  (use-package ef-themes
    :config
    (defun get-season (month)
      (cond
       ((and (>= month 3) (< month 6)) 'spring)
       ((and (>= month 6) (< month 9)) 'summer)
       ((and (>= month 10) (< month 12)) 'autumn)
       ((or (>= month 12) (< month 3) 'winter))))

    (defun set-season-theme ()
      (interactive)
      (let* ((month (car (calendar-current-date)))
  	   (season (get-season month))
  	   (theme-name (format "ef-%s" season)))
        (load-theme (intern theme-name)))))
#+end_src

* Modeline

Install the =doom-modeline=.

#+begin_src elisp
  (use-package doom-modeline
    :hook (after-init . doom-modeline-mode))
#+end_src
